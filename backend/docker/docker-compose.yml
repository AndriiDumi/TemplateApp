version: '3.8'

services:
  app:
    build: 
      context: ../
      dockerfile: Dockerfile
    image: template_api_image
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - template_network

  frontend:
    image: nginx:alpine
    container_name: template_frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "5500:80"
    networks:
      - template_network

  postgres:
    image: postgres:16.4
    container_name: template_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - template_network

volumes:
  postgres_data:

networks:
  template_network:
